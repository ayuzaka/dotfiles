snippets:
  - name: ls --long
    keyword: ll
    snippet: lsd -lh

  - name: ls --all
    keyword: la
    snippet: lsd -lah

  - name: clear
    keyword: cl
    snippet: clear

  - name: aws-cli
    keyword: aws
    snippet: docker run --rm -it -v ~/.aws:/root/.aws -v $(pwd):/aws amazon/aws-cli

  - name: docker container exec
    keyword: dc-exec
    snippet: docker container exec -it

  - name: python
    keyword: py
    snippet: python3

  - name: golangci-lint
    keyword: golint
    snippet: golangci-lint

  - name: online-judge-tools-go
    keyword: ojgo
    snippet: oj test -c "go run main.go" -d tests/

  - name: git-difftool
    keyword: gitdiff
    snippet: git difftool

  - name: gh copilot explain
    keyword: ghe
    snippet: gh copilot explain "{{text}}"

  - name: gh copilot suggest
    keyword: ghs
    snippet: gh copilot suggest "{{text}}"

  - name: ollama
    keyword: ol
    snippet: ollama

completions:
  - name: git switch
    patterns:
      - "^git switch(?: .*)? $"
    sourceCommand: "git branch | grep -v '*'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Switch > ' "
    callback: "awk '{print $1}'"

  - name: git branch delete
    patterns:
      - "^git branch -d(?: .*)? $"
    sourceCommand: "git branch --merged | grep -v -E '(develop|master|main)'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Branch Delete > ' "
    callback: "awk '{print $1}'"

  - name: tmux attach
    patterns:
      - "^tmux a -t(?: .*)? $"
    sourceCommand: "tmux ls"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'tmux attach > ' "
    callback: "awk -F ':' '{print $1}'"

  - name: zellij attach
    patterns:
      - "^zellij a(?: .*)? $"
    sourceCommand: "zellij list-sessions"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Zellij attach > ' "

  - name: docker (running) container operation
    patterns:
      - "^docker container exec -it(?: .*)? $"
      - "^docker container stop(?: .*)? $"
    sourceCommand: "docker container ls --format '{{.Names}}'"
    options:
      --prompt: "'docker container > ' "

  - name: docker container operation
    patterns:
      - "^docker container rm(?: .*)? $"
    sourceCommand: "docker container ls -a --format '{{.Names}}'"
    options:
      --prompt: "'docker container > ' "

  - name: docker image operation
    patterns:
      - "^docker image rm(?: .*)? $"
    sourceCommand: "docker image ls --format '{{.Repository}}:{{.Tag}}:{{.ID}}'"
    options:
      --prompt: "'docker image > ' "
    callback: "awk -F ':' '{print $3}'"

  - name: ssh login
    patterns:
      - "^ssh(?: .*)? $"
    sourceCommand: "cat ~/.ssh/*.conf | grep -E '^Host\\s' | grep -v '*' | awk '{print $2}'"
    options:
      --prompt: "'ssh > ' "

  - name: npm scripts
    patterns:
      - "npm run(?: .*)? $"
      - "yarn run(?: .*)? $"
      - "pnpm run(?: .*)? $"
      - "bun run(?: .*)? $"
    sourceCommand: 'jq -r ''.scripts | to_entries | .[] | .key + " = " + .value'' package.json'
    options:
      --prompt: "'npm run > '"
    callback: "awk -F ' = ' '{ print $1 }'"

  - name: deno tasks
    patterns:
      - "deno task(?: .*)? $"
    sourceCommand: 'jq -r ''.tasks | to_entries | .[] | .key + " = " + .value'' deno.json'
    options:
      --prompt: "'deno task > '"
    callback: "awk -F ' = ' '{ print $1 }'"

  - name: ollama run
    patterns:
      - "^ollama run(?: .*)? $"
    sourceCommand: "ollama list | grep -v 'NAME' | awk -F ':' '{print $1}'"
    options:
      --prompt: "'ollama run > '"

  - name: fnm switch
    patterns:
      - "^fnm use (?: .*)?"
    sourceCommand: "fnm list"
    options:
      --prompt: "'fnm use > '"
    callback: "awk '{print $2}'"

  - name: act run job
    patterns:
      - "^act --job (?: .*)?"
    sourceCommand: "act --list | grep -v Stage | awk '{print $2}'"
    options:
      --prompt: "'act --job > '"
