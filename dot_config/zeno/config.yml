snippets:
  - name: ls --long
    keyword: ll
    snippet: lsd -lh

  - name: ls --all
    keyword: la
    snippet: lsd -lah

  - name: clear
    keyword: cl
    snippet: clear

  - name: docker container exec
    keyword: dc-exec
    snippet: docker container exec -it

  - name: golangci-lint
    keyword: golint
    snippet: golangci-lint

  - name: online-judge-tools-go
    keyword: ojgo
    snippet: oj test -c "go run main.go" -d tests/

  - name: git push ----force-with-lease
    keyword: gpf
    snippet: git push --force-with-lease

  - name: git tree
    keyword: git-tree
    snippet: git log --graph --pretty=format:'%x09%C(auto) %h %Cgreen %cd %Creset%x09%C(cyan ul)%an%Creset %x09%C(auto)%s %d' --date=format:'%Y-%m-%d (%a)'

  - name: git switch main
    keyword: gm
    snippet: git switch main

  - name: git switch
    keyword: gs
    snippet: git switch

  - name: git fetch && git checkout
    keyword: gc
    snippet: git fetch && git checkout

  - name: show latest commit hash
    keyword: gch
    snippet: git rev-parse HEAD

  - name: my PR
    keyword: gh-pr-me
    snippet: gh pr list --author "@me" --state all

  - name: search PR
    keyword: gh-pr-search
    snippet: gh pr list --state all --json number,title --jq ".[] | [.number,.title] | @csv" --search "{{text}}" | fzf | awk -F ',' '{print $1}' | xargs gh browse

  - name: gh copilot explain
    keyword: ghe
    snippet: gh copilot explain "{{text}}"

  - name: gh copilot suggest
    keyword: ghs
    snippet: gh copilot suggest "{{text}}"

  - name: ollama
    keyword: ol
    snippet: ollama

  - name: img2sixel
    keyword: ls-img
    snippet: img2sixel

  - name: gcloud switch
    keyword: gcloud-switch
    snippet: gcloud config configurations activate

  - name: use zoxide instead of cd
    keyword: cd
    snippet: z

  - name: force neovim
    keyword: vim
    snippet: nvim

completions:
  - name: git switch
    patterns:
      - "^git switch(?: .*)? $"
    sourceCommand: "git branch | grep -v '*'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Switch > ' "
    callback: "awk '{print $1}'"

  - name: git checkout remote branch
    patterns:
      - "git checkout(?: .*)? $"
    sourceCommand: "git branch -r | grep -v '*' | sed 's/origin\\/\/\/'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Switch > ' "
    callback: "awk '{print $1}'"

  - name: git branch delete
    patterns:
      - "^git branch -d(?: .*)? $"
    sourceCommand: "git branch --merged | grep -v -E '(develop|master|main|^\\*)'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Branch Delete > ' "
    callback: "awk '{print $1}'"

  - name: git branch delete force
    patterns:
      - "^git branch -D(?: .*)? $"
    sourceCommand: "git branch | grep -v -E '(develop|master|main|^\\*)'"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'Git Branch Delete > ' "
    callback: "awk '{print $1}'"

  - name: tmux attach
    patterns:
      - "^tmux a -t(?: .*)? $"
    sourceCommand: "tmux ls"
    options:
      --height: "80%"
      --print0: true
      --preview-window: "down"
      --prompt: "'tmux attach > ' "
    callback: "awk -F ':' '{print $1}'"

  - name: docker (running) container operation
    patterns:
      - "^docker container exec -it(?: .*)? $"
      - "^docker container stop(?: .*)? $"
    sourceCommand: "docker container ls --format '{{.Names}}'"
    options:
      --prompt: "'docker container > ' "

  - name: docker container operation
    patterns:
      - "^docker container rm(?: .*)? $"
    sourceCommand: "docker container ls -a --format '{{.Names}}'"
    options:
      --prompt: "'docker container > ' "

  - name: docker image operation
    patterns:
      - "^docker image rm(?: .*)? $"
    sourceCommand: "docker image ls --format '{{.Repository}}:{{.Tag}}:{{.ID}}'"
    options:
      --prompt: "'docker image > ' "
    callback: "awk -F ':' '{print $3}'"

  - name: ssh login
    patterns:
      - "^ssh(?: .*)? $"
    sourceCommand: "cat ~/.ssh/*.conf | grep -E '^Host\\s' | grep -v '*' | awk '{print $2}'"
    options:
      --prompt: "'ssh > ' "

  - name: npm scripts
    patterns:
      - "npm run(?: .*)? $"
      - "yarn run(?: .*)? $"
      - "pnpm run(?: .*)? $"
      - "bun run(?: .*)? $"
    sourceCommand: 'jq -r ''.scripts | to_entries | .[] | .key + " = " + .value'' package.json'
    options:
      --prompt: "'npm run > '"
    callback: "awk -F ' = ' '{ print $1 }'"

  - name: deno tasks
    patterns:
      - "deno task(?: .*)? $"
    sourceCommand: 'jq -r ''.tasks | to_entries | .[] | .key + " = " + .value'' deno.json'
    options:
      --prompt: "'deno task > '"
    callback: "awk -F ' = ' '{ print $1 }'"

  - name: ollama run
    patterns:
      - "^ollama run(?: .*)? $"
    sourceCommand: "ollama list | grep -v 'NAME' | awk -F ':' '{print $1}'"
    options:
      --prompt: "'ollama run > '"

  - name: fnm switch
    patterns:
      - "^fnm use (?: .*)?"
      - "^fnm uninstall (?: .*)?"
      - "^fnm default (?: .*)?"
    sourceCommand: "fnm list"
    options:
      --prompt: "'fnm use > '"
    callback: "awk '{print $2}'"

  - name: act run job
    patterns:
      - "^act --job (?: .*)?"
    sourceCommand: "act --list | grep -v Stage | awk '{print $2}'"
    options:
      --prompt: "'act --job > '"

  - name: toggle active gcloud account
    patterns:
      - "^gcloud config configurations activate(?: .*)?"
    sourceCommand: "gcloud config configurations list --format 'value(name)'"
    options:
      --prompt: "'gcloud --project > '"
