{
  "includeCoAuthoredBy": false,
  "autoUpdates": false,
  "model": "opusplan",
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(gemini:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(npm run:lint)",
      "Bash(npm run:test)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm test:*)",
      "Bash(rg:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn test:*)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:developers.cloudflare.com)",
      "WebFetch(domain:ghost.org)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:nuxt.com)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:svelte.dev)",
      "WebFetch(domain:vuejs.org)",
      "WebFetch(domain:vueuse.org)",
      "WebFetch(domain:www.figma.com)",
      "WebFetch(domain:www.typescriptlang.org)",
      "mcp__MCP_DOCKER__directory_tree",
      "mcp__MCP_DOCKER__get_file_info",
      "mcp__MCP_DOCKER__list_allowed_directories",
      "mcp__MCP_DOCKER__list_directory",
      "mcp__MCP_DOCKER__read_file",
      "mcp__MCP_DOCKER__read_multiple_files",
      "mcp__MCP_DOCKER__search_files",
      "mcp__figma-dev-mode-mcp-server__get_code",
      "mcp__figma-dev-mode-mcp-server__get_image",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_take_screenshot"
    ],
    "deny": [
      "Bash(curl:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(mongod:*)",
      "Bash(mysql:*)",
      "Bash(nc:*)",
      "Bash(npm remove:*)",
      "Bash(npm uninstall:*)",
      "Bash(psql:*)",
      "Bash(rm:*)",
      "Bash(sudo:*)",
      "Bash(wget:*)",
      "Read(**/*key*)",
      "Read(**/*token*)",
      "Read(**/.ssh/**)",
      "Read(.env.*)",
      "Write(**/secrets/**)",
      "Write(.env*)"
    ]
  },
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Submarine.aiff"
          }
        ]
      }
    ]
  }
}
